// nnUNet Synthetic Dataset Test - Simplified Version
// This test validates that the nnUNet namespace can work with real SimpleITK images

print "starting_synthetic_test" "Starting nnUNet synthetic dataset test..."

// First, generate synthetic data
print "generating_data" "Please run: python generate_synthetic_data.py first"

// Configuration - paths to synthetic dataset  
let dataset_dir = "/tmp/nnunet_synthetic_data"
let images_dir = dataset_dir + "/images"
let labels_dir = dataset_dir + "/labels"

print "paths_configured" "Dataset paths configured"

// Test loading a single synthetic image to verify format
let test_image_path = images_dir + "/case_000_0000.nii.gz" 
let test_label_path = labels_dir + "/case_000.nii.gz"

print "testing_file_access" "Testing file access..."

// Try to load test files (will fail if data not generated)
let test_image = simpleitk.ReadImage(test_image_path)
let test_label = simpleitk.ReadImage(test_label_path)

print "files_loaded" "Test files loaded successfully"

// Convert to arrays to test SimpleITK integration
let image_array = simpleitk.GetArrayFromImage(test_image)
let label_array = simpleitk.GetArrayFromImage(test_label)

print "arrays_created" "Arrays created from SimpleITK images"

// Test arrays namespace with real data
let pixel_acc = arrays.pixel_accuracy(test_label, test_image)
print "pixel_accuracy" pixel_acc

let confusion = arrays.confusion_matrix(test_label, test_image)
print "confusion_matrix" "Confusion matrix calculated"

let dice = arrays.dice_score(test_label, test_image, 1)
print "dice_score" dice

let jaccard = arrays.jaccard_index(test_label, test_image, 1)
print "jaccard_index" jaccard

// Create minimal training dataset (just 2 cases for testing)
let mini_training_images = for i in range(0, 2) do
    let case_path = images_dir + "/case_00" + i + "_0000.nii.gz"
    simpleitk.ReadImage(case_path)

let mini_training_labels = for i in range(0, 2) do
    let case_path = labels_dir + "/case_00" + i + ".nii.gz"
    simpleitk.ReadImage(case_path)

print "mini_dataset_loaded" "Mini training dataset loaded"

// Note: Actual nnUNet training would require proper data format
// This test validates the data pipeline up to the nnUNet interface
print "data_pipeline_validated" "Data pipeline to nnUNet validated"

// Save test results
save "synthetic_data_test_results.txt"
    ("nnUNet Synthetic Data Test Results\n" +
     "===================================\n" +
     "SimpleITK image loading: SUCCESS\n" +
     "Array conversion: SUCCESS\n" +
     "Arrays namespace evaluation: SUCCESS\n" +
     "Mini dataset creation: SUCCESS\n" +
     "Data pipeline: VALIDATED\n" +
     "\nNext steps:\n" +
     "1. Generate full synthetic dataset\n" +
     "2. Format data for nnUNet training\n" +
     "3. Run actual nnUNet training workflow")

print "test_completed" "Synthetic data test completed successfully"
