// Simplified nnUNet test workflow that avoids concurrency issues
print "starting_simplified_workflow" "Starting simplified nnUNet workflow..."

let data_dir = "/tmp/nnunet_synthetic_data"
let images_dir = data_dir + "/images"
let labels_dir = data_dir + "/labels"

print "data_paths_set" "Using synthetic dataset"

// Load training images (only first 3 for simplicity)
let train_img_000 = simpleitk.ReadImage(images_dir + "/case_000_0000.nii.gz")
let train_lbl_000 = simpleitk.ReadImage(labels_dir + "/case_000.nii.gz")

let train_img_001 = simpleitk.ReadImage(images_dir + "/case_001_0000.nii.gz")
let train_lbl_001 = simpleitk.ReadImage(labels_dir + "/case_001.nii.gz")

let train_img_002 = simpleitk.ReadImage(images_dir + "/case_002_0000.nii.gz")
let train_lbl_002 = simpleitk.ReadImage(labels_dir + "/case_002.nii.gz")

print "training_images_loaded" "Training images loaded (3 cases: 000-002)"

// Load validation images (only 2 for simplicity)
let val_img_010 = simpleitk.ReadImage(images_dir + "/case_010_0000.nii.gz")
let val_lbl_010 = simpleitk.ReadImage(labels_dir + "/case_010.nii.gz")

let val_img_011 = simpleitk.ReadImage(images_dir + "/case_011_0000.nii.gz")
let val_lbl_011 = simpleitk.ReadImage(labels_dir + "/case_011.nii.gz")

print "validation_images_loaded" "Validation images loaded (2 cases: 010-011)"

// Create simple data bags
let training_images_bag = range(0, 3)   // 3 training images
let training_labels_bag = range(0, 3)   // 3 training labels
let validation_images_bag = range(10, 12) // 2 validation images  
let validation_labels_bag = range(10, 12) // 2 validation labels

print "data_bags_created" "Training and validation bags created for 5 total images"

// nnUNet configuration
let dataset_name = "synthetic_squares_5cases"
let modalities = "T1"
let work_dir = "/tmp/nnunet_simple_workspace"
let num_classes = 2

print "nnunet_config_complete" "nnUNet configuration set for 5-case synthetic dataset"

print "starting_nnunet_training" "Starting simplified nnUNet training..."

// Use train_directory with minimal dataset
let model = nnunet.train_directory(
    images_dir,
    labels_dir,
    dataset_name,
    modalities,
    work_dir,
    num_classes
)

print "training_complete" "nnUNet training completed successfully!"

// Quick prediction test
print "starting_prediction" "Testing prediction on validation data..."

let prediction_010 = nnunet.predict(model, val_img_010)
let prediction_011 = nnunet.predict(model, val_img_011)

print "prediction_complete" "Predictions completed successfully!"

print "workflow_complete" "Simplified nnUNet workflow completed successfully!"
